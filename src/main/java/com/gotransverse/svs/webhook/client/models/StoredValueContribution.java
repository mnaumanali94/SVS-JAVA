/*
 * SVSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/15/2016
 */
package com.gotransverse.svs.webhook.client.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class StoredValueContribution 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5491259048759154322L;
    private Double orderGrantedValue;
    private Double orderedAmount;
    private Double listGrantedValue;
    private Double listAmount;
    private String sourceId;
    private String sourceType;
    private String sourceDescription;
    private Date effectiveDate;
    /** GETTER
     * The granted value of contribution.  Draw downs occur off of this value.  Can be negative.
     */
    @JsonGetter("order_granted_value")
    public Double getOrderGrantedValue ( ) { 
        return this.orderGrantedValue;
    }
    
    /** SETTER
     * The granted value of contribution.  Draw downs occur off of this value.  Can be negative.
     */
    @JsonSetter("order_granted_value")
    public void setOrderGrantedValue (Double value) { 
        this.orderGrantedValue = value;
    }
 
    /** GETTER
     * The ordered (or "invoiced" or "sold") amount of contribution.  Can be negative.  Can be different (usually less) than the granted_amount.
     */
    @JsonGetter("ordered_amount")
    public Double getOrderedAmount ( ) { 
        return this.orderedAmount;
    }
    
    /** SETTER
     * The ordered (or "invoiced" or "sold") amount of contribution.  Can be negative.  Can be different (usually less) than the granted_amount.
     */
    @JsonSetter("ordered_amount")
    public void setOrderedAmount (Double value) { 
        this.orderedAmount = value;
    }
 
    /** GETTER
     * The list of the granted value of contribution.
     */
    @JsonGetter("list_granted_value")
    public Double getListGrantedValue ( ) { 
        return this.listGrantedValue;
    }
    
    /** SETTER
     * The list of the granted value of contribution.
     */
    @JsonSetter("list_granted_value")
    public void setListGrantedValue (Double value) { 
        this.listGrantedValue = value;
    }
 
    /** GETTER
     * The original (or "list price" or "msrp") amount of the contribution.  Can be negative.
     */
    @JsonGetter("list_amount")
    public Double getListAmount ( ) { 
        return this.listAmount;
    }
    
    /** SETTER
     * The original (or "list price" or "msrp") amount of the contribution.  Can be negative.
     */
    @JsonSetter("list_amount")
    public void setListAmount (Double value) { 
        this.listAmount = value;
    }
 
    /** GETTER
     * A source id for this transaction.
     */
    @JsonGetter("source_id")
    public String getSourceId ( ) { 
        return this.sourceId;
    }
    
    /** SETTER
     * A source id for this transaction.
     */
    @JsonSetter("source_id")
    public void setSourceId (String value) { 
        this.sourceId = value;
    }
 
    /** GETTER
     * The type of record that this source correpsonds to.
     */
    @JsonGetter("source_type")
    public String getSourceType ( ) { 
        return this.sourceType;
    }
    
    /** SETTER
     * The type of record that this source correpsonds to.
     */
    @JsonSetter("source_type")
    public void setSourceType (String value) { 
        this.sourceType = value;
    }
 
    /** GETTER
     * A source description for this transaction.
     */
    @JsonGetter("source_description")
    public String getSourceDescription ( ) { 
        return this.sourceDescription;
    }
    
    /** SETTER
     * A source description for this transaction.
     */
    @JsonSetter("source_description")
    public void setSourceDescription (String value) { 
        this.sourceDescription = value;
    }
 
    /** GETTER
     * The date this transaction is effective.  Can be in the past.
     */
    @JsonGetter("effective_date")
    public Date getEffectiveDate ( ) { 
        return this.effectiveDate;
    }
    
    /** SETTER
     * The date this transaction is effective.  Can be in the past.
     */
    @JsonSetter("effective_date")
    public void setEffectiveDate (Date value) { 
        this.effectiveDate = value;
    }
 
}
 