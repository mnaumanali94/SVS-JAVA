/*
 * SVSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/15/2016
 */
package com.gotransverse.svs.webhook.client.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

public enum CurrencyEnum {
    USD, //TODO: Write general description for this element
    GBP, //TODO: Write general description for this element
    EUR, //TODO: Write general description for this element
    SEK, //TODO: Write general description for this element
    NOK, //TODO: Write general description for this element
    DKK, //TODO: Write general description for this element
    CAD, //TODO: Write general description for this element
    AUD, //TODO: Write general description for this element
    ZAR, //TODO: Write general description for this element
    NZD, //TODO: Write general description for this element
    MXN, //TODO: Write general description for this element
    INR, //TODO: Write general description for this element
    JPY, //TODO: Write general description for this element
    SAR, //TODO: Write general description for this element
    QAR, //TODO: Write general description for this element
    EGP, //TODO: Write general description for this element
    AED, //TODO: Write general description for this element
    BHD, //TODO: Write general description for this element
    KWD, //TODO: Write general description for this element
    OMR, //TODO: Write general description for this element
    HKD, //TODO: Write general description for this element
    CHF; //TODO: Write general description for this element

    private static TreeMap<String, CurrencyEnum> valueMap = new TreeMap<String, CurrencyEnum>();
    private String value;

    static {
        USD.value = "USD";
        GBP.value = "GBP";
        EUR.value = "EUR";
        SEK.value = "SEK";
        NOK.value = "NOK";
        DKK.value = "DKK";
        CAD.value = "CAD";
        AUD.value = "AUD";
        ZAR.value = "ZAR";
        NZD.value = "NZD";
        MXN.value = "MXN";
        INR.value = "INR";
        JPY.value = "JPY";
        SAR.value = "SAR";
        QAR.value = "QAR";
        EGP.value = "EGP";
        AED.value = "AED";
        BHD.value = "BHD";
        KWD.value = "KWD";
        OMR.value = "OMR";
        HKD.value = "HKD";
        CHF.value = "CHF";

        valueMap.put("USD", USD);
        valueMap.put("GBP", GBP);
        valueMap.put("EUR", EUR);
        valueMap.put("SEK", SEK);
        valueMap.put("NOK", NOK);
        valueMap.put("DKK", DKK);
        valueMap.put("CAD", CAD);
        valueMap.put("AUD", AUD);
        valueMap.put("ZAR", ZAR);
        valueMap.put("NZD", NZD);
        valueMap.put("MXN", MXN);
        valueMap.put("INR", INR);
        valueMap.put("JPY", JPY);
        valueMap.put("SAR", SAR);
        valueMap.put("QAR", QAR);
        valueMap.put("EGP", EGP);
        valueMap.put("AED", AED);
        valueMap.put("BHD", BHD);
        valueMap.put("KWD", KWD);
        valueMap.put("OMR", OMR);
        valueMap.put("HKD", HKD);
        valueMap.put("CHF", CHF);
    }

    /**
     * Returns the enum member associated with the given string value
     * @return The enum member against the given string value */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static CurrencyEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member
     * @return The string value against enum member */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of CurrencyEnum values to list of string values
     * @param toConvert The list of CurrencyEnum values to convert
     * @return List of representative string values */
    public static List<String> toValue(List<CurrencyEnum> toConvert) {
        if(toConvert == null)
            return null;
        List<String> convertedValues = new ArrayList<String>();
        for (CurrencyEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 