/*
 * SVSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/15/2016
 */
package com.gotransverse.svs.webhook.client.models;

import java.util.*;

public class StoredValueDailyTransactionBuilder {
    //the instance to build
    private StoredValueDailyTransaction storedValueDailyTransaction;

    /**
     * Default constructor to initialize the instance
     */
    public StoredValueDailyTransactionBuilder() {
        storedValueDailyTransaction = new StoredValueDailyTransaction();
    }

    /**
     * The total amount of the transactions that makes up this daily aggregate.  Can be negative.
     */
    public StoredValueDailyTransactionBuilder totalAmount(Double totalAmount) {
        storedValueDailyTransaction.setTotalAmount(totalAmount);
        return this;
    }

    /**
     * The unit of measure for register
     */
    public StoredValueDailyTransactionBuilder registerUom(String registerUom) {
        storedValueDailyTransaction.setRegisterUom(registerUom);
        return this;
    }

    public StoredValueDailyTransactionBuilder direction(DirectionEnum direction) {
        storedValueDailyTransaction.setDirection(direction);
        return this;
    }

    /**
     * The total number of transactions that make up this daily aggregate.
     */
    public StoredValueDailyTransactionBuilder count(Long count) {
        storedValueDailyTransaction.setCount(count);
        return this;
    }

    /**
     * The year portion of the date for this aggregate
     */
    public StoredValueDailyTransactionBuilder year(Integer year) {
        storedValueDailyTransaction.setYear(year);
        return this;
    }

    /**
     * The month portion of the date for this aggregate.  Values from 1 to 12.
     */
    public StoredValueDailyTransactionBuilder month(Integer month) {
        storedValueDailyTransaction.setMonth(month);
        return this;
    }

    /**
     * The day portion of the date for this aggregate.  Values from 1 to 31.
     */
    public StoredValueDailyTransactionBuilder day(Integer day) {
        storedValueDailyTransaction.setDay(day);
        return this;
    }

    /**
     * The timezone offset of the dates included in this aggregate.  E.g. UTC-0400 is GMT-4.
     */
    public StoredValueDailyTransactionBuilder timezoneOffset(String timezoneOffset) {
        storedValueDailyTransaction.setTimezoneOffset(timezoneOffset);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public StoredValueDailyTransaction build() {
        return storedValueDailyTransaction;
    }
}