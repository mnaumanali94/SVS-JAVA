/*
 * SVSLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 12/15/2016
 */
package com.gotransverse.svs.webhook.client.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class RegisterBalance 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5207564650763279367L;
    private StoredValueRegister register;
    private String registerCategory;
    private Double balanceAmount;
    private Integer balanceCount;
    private Double consumptionBalanceAmount;
    private Integer consumptionBalanceCount;
    private Double contributionBalanceAmount;
    private Integer contributionBalanceCount;
    private Date maxEffectiveDate;
    /** GETTER
     * An object to track a set of transactions around for stored value.
     */
    @JsonGetter("register")
    public StoredValueRegister getRegister ( ) { 
        return this.register;
    }
    
    /** SETTER
     * An object to track a set of transactions around for stored value.
     */
    @JsonSetter("register")
    public void setRegister (StoredValueRegister value) { 
        this.register = value;
    }
 
    /** GETTER
     * The category of the register associated with this balance
     */
    @JsonGetter("register_category")
    public String getRegisterCategory ( ) { 
        return this.registerCategory;
    }
    
    /** SETTER
     * The category of the register associated with this balance
     */
    @JsonSetter("register_category")
    public void setRegisterCategory (String value) { 
        this.registerCategory = value;
    }
 
    /** GETTER
     * The total amount of the balance on the register
     */
    @JsonGetter("balance_amount")
    public Double getBalanceAmount ( ) { 
        return this.balanceAmount;
    }
    
    /** SETTER
     * The total amount of the balance on the register
     */
    @JsonSetter("balance_amount")
    public void setBalanceAmount (Double value) { 
        this.balanceAmount = value;
    }
 
    /** GETTER
     * The total number of transactions on the register
     */
    @JsonGetter("balance_count")
    public Integer getBalanceCount ( ) { 
        return this.balanceCount;
    }
    
    /** SETTER
     * The total number of transactions on the register
     */
    @JsonSetter("balance_count")
    public void setBalanceCount (Integer value) { 
        this.balanceCount = value;
    }
 
    /** GETTER
     * The total amount of the consumption balance on the register
     */
    @JsonGetter("consumption_balance_amount")
    public Double getConsumptionBalanceAmount ( ) { 
        return this.consumptionBalanceAmount;
    }
    
    /** SETTER
     * The total amount of the consumption balance on the register
     */
    @JsonSetter("consumption_balance_amount")
    public void setConsumptionBalanceAmount (Double value) { 
        this.consumptionBalanceAmount = value;
    }
 
    /** GETTER
     * The total number of consumption transactions on the register
     */
    @JsonGetter("consumption_balance_count")
    public Integer getConsumptionBalanceCount ( ) { 
        return this.consumptionBalanceCount;
    }
    
    /** SETTER
     * The total number of consumption transactions on the register
     */
    @JsonSetter("consumption_balance_count")
    public void setConsumptionBalanceCount (Integer value) { 
        this.consumptionBalanceCount = value;
    }
 
    /** GETTER
     * The total amount of the contribution balance on the register
     */
    @JsonGetter("contribution_balance_amount")
    public Double getContributionBalanceAmount ( ) { 
        return this.contributionBalanceAmount;
    }
    
    /** SETTER
     * The total amount of the contribution balance on the register
     */
    @JsonSetter("contribution_balance_amount")
    public void setContributionBalanceAmount (Double value) { 
        this.contributionBalanceAmount = value;
    }
 
    /** GETTER
     * The total number of contribution transactions on the register
     */
    @JsonGetter("contribution_balance_count")
    public Integer getContributionBalanceCount ( ) { 
        return this.contributionBalanceCount;
    }
    
    /** SETTER
     * The total number of contribution transactions on the register
     */
    @JsonSetter("contribution_balance_count")
    public void setContributionBalanceCount (Integer value) { 
        this.contributionBalanceCount = value;
    }
 
    /** GETTER
     * The maximum effective date of the balance
     */
    @JsonGetter("max_effective_date")
    public Date getMaxEffectiveDate ( ) { 
        return this.maxEffectiveDate;
    }
    
    /** SETTER
     * The maximum effective date of the balance
     */
    @JsonSetter("max_effective_date")
    public void setMaxEffectiveDate (Date value) { 
        this.maxEffectiveDate = value;
    }
 
}
 